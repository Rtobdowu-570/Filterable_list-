{"version":3,"sources":["filter.js"],"names":["filter","document","getElementById","getItems","e","filterValue","value","toUpperCase","querySelector","querySelectorAll","forEach","header","head","push","nextElementSibling","contains","items","isVisible","getElementsByTagName","item","display","indexOf","style","validateName","name","isNaN","err","addBtn","addEventListener","addContact","preventDefault","li","createElement","a","appendChild","list","className","href","deleteBtn","found","contactName","searchName","trim","removeChild","getElementsByClassName","alert","i","length","innerHTML","deleteContact"],"mappings":"aACA,IAAIA,OAASC,SAASC,eAAe,UAMrC,SAASC,SAATC,GAEG,IAAIC,EAAcL,OAAOM,MAAMC,cAGpBN,SAASO,cAAc,uBAM9BP,SAAiBQ,iBAAU,mBAAnBC,QAAS,SAAAC,GAKZC,IAFH,IAAOA,EAASA,GACPC,EAAKD,EAAXE,mBACOF,IAAKE,EAAAA,UAAZC,SAAA,mBAILC,EAAAH,KAAAD,GAJKA,EAAOA,EAAKE,mBAUlB,IAAKG,GAAQC,EAGVD,EAAAA,QAAS,SAAAE,IAET,EADIA,EAAAD,qBAAA,KAAA,GACJC,UAAWC,cAAXC,QAAAhB,IACFc,EAAAG,MAAAF,QAAA,GAIJH,GAAA,GACAN,EAAOW,MAAMF,QAAUH,SAQxBN,EAAIW,MAAAF,QAAAH,EAAA,GAAA,SADN,SAASM,aAAaC,GAQpB,IAIF,GAAA,KAAAA,EAAA,KAAA,QATI,IAAKC,MAAMD,GAAO,KAAM,SACxB,MAAOE,GAUXC,OADMA,MAAM,kBAAYzB,IACjB0B,EAEP,OAASC,EA/DT7B,OAAO4B,iBAAiB,QAASzB,UAoE/B,IAAAwB,OAAQ1B,SAAAC,eAAA,mBAEP,SAAIsB,WAAMpB,GACPA,EAAA0B,iBACA,IAAMC,EAAK9B,OAAS+B,8BAEpB,GAAMC,aAAaD,IAGhBE,EAAAA,CACHC,IAAKD,EAAAA,SAAL1B,cAAA,uBACFuB,EAAA9B,SAAA+B,cAAA,MAKJD,EAAAK,UAAA,eAVM,IAAMH,EAAIhC,SAAS+B,cAAc,KACjCC,EAAEI,KAAO,IAUTC,EAAAA,YAAYrC,EAClBqC,EAASJ,YAACN,GARJO,EAAKD,YAAYH,IATnBJ,OAAAC,iBAAA,QAAAC,YAwBA,IAAAS,UAAArC,SAAAC,eAAA,sBAED,SAAIsB,cAAMpB,GACRA,EAAA0B,iBACA,IAAMK,EAAOlC,OAAQ,wCAErB,GAAIsC,aAAJf,IAICA,EAAIgB,CAKD,IAZJ,IAAMC,EAAajB,EAAKkB,OAAOnC,cAQ3BiC,EAAAA,SAAgBC,cAAY,uBAC5BN,EAAKQ,EAALC,uBAAA,gBACAC,GAAMrB,EAENsB,EAAA,EAAAA,EAAA9B,EAAA+B,OAAAD,IAAA,CAJH,GAKA9B,EAAA8B,GAAA5B,qBAAA,KAAA,GACF8B,UAAAN,OAAAnC,gBANqBkC,EAAY,CAO9BF,EAAJI,YAAW3B,EAAA8B,IACRD,MAAMrB,EAAO,sBACfe,GAAA,EACA,OAHGA,GACDM,MAAMrB,EAAO,4BA1BnBc,UAAUV,iBAAiB,QAASqB","file":"filter.min.js","sourcesContent":["// Get the id \nlet filter = document.getElementById('filter');\n\n// Add event listener to filter\nfilter.addEventListener('keyup', getItems);\n\n// Get Items \nfunction getItems (e) {\n   // Get input \n   let filterValue = filter.value.toUpperCase();\n\n   // Get list \n   let list = document.querySelector('.contact-collection');\n\n   // Get Headers\n   let headers = document.querySelectorAll('.contact-header');\n\n      // loop using forEach \n       headers.forEach((header => {\n        let items = [];\n         let head = header.nextElementSibling;\n         while (head && !head.classList.contains('contact-header')) {\n            items.push(head);\n            head = head.nextElementSibling;\n         }\n      \n\n       // Check if item is visible\n       let isVisible = false;\n\n\n   // Loop through Collections items \n   items.forEach((item) => {\n      let a = item.getElementsByTagName('a')[0];\n      if(a.innerHTML.toUpperCase().indexOf(filterValue) > -1) {\n         item.style.display = '';\n         isVisible = true;\n      } else {\n         item.style.display = 'none';\n      }\n      });\n\n\n   // Show or hide header based on items visibility\n   header.style.display = isVisible ? '' : 'none';\n\n    }));\n\n   }\n\n   // validate name \nfunction validateName(name) {\n  try {\n    if (name === '') throw 'empty';\n    if (!isNaN(name)) throw 'number';\n  } catch (err) {\n    alert('Invalid input: ' + err);\n    return false;\n  }\n  return true;\n}\n\n\n// Add contact to the list \nconst addBtn = document.getElementById('add-contact-btn');\naddBtn.addEventListener('click', addContact); \n   \nfunction addContact(e) {\n   e.preventDefault();\n   const name = prompt('Enter the name of contact:');\n   \n   if (!validateName(name)) {\n  return; // stop if invalid\n   }\n   if (name) {\n      const list = document.querySelector('.contact-collection');\n      const li = document.createElement('li');\n      li.className = 'contact-item';\n      const a = document.createElement('a');\n      a.href = '#';\n      a.textContent = name;\n      li.appendChild(a);\n      list.appendChild(li);\n   }\n   \n}\n\n\n// Delete contact from list \nconst deleteBtn = document.getElementById('delete-contact-btn');\ndeleteBtn.addEventListener('click', deleteContact);\nfunction deleteContact(e) {\n   e.preventDefault();\n   const name = prompt('Enter the name of contact to delete:');\n\n   if (!validateName(name)) {\n     return; // stop if invalid\n   }\n\n   if (name) {\n     const searchName = name.trim().toUpperCase();\n     const list = document.querySelector('.contact-collection');\n     const items = list.getElementsByClassName('contact-item');\n     let found = false;\n\n     for (let i = 0; i < items.length; i++) {\n      let a = items[i].getElementsByTagName('a')[0];\n      let contactName = a.innerHTML.trim().toUpperCase();\n      if(contactName === searchName) {\n         list.removeChild(items[i]);\n         alert(name + ' has been deleted.');\n         found = true;\n         break;\n     }\n   }\n   if(!found) {\n      alert(name + ' not found in contacts.');\n   }\n   }\n   \n}"]}